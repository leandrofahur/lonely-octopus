# -*- coding: utf-8 -*-
"""Leandro Machado Project: Merch AI Designer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WVTdpEuqiEr6i3yvvLrpKgP1iY1jyRKc

<img style="display: block; margin: 0 auto" src="https://images.squarespace-cdn.com/content/v1/645a878d9740963714b8f343/3efb24e3-9fb9-4bc7-b41e-7f36742ae747/2-2.jpg?format=1500w" alt="Lonely Octopus Logo">

**Please create a copy of the notebook in your gdrive to be able to edit it.**

**You can make a copy from the menu: File > Save a copy in Drive**

## Step 1: Setting Up Your Notebook Environment
"""

# Intall necessary libraries
!pip install openai --quiet
!pip install streamlit --quiet

"""## Step 2: Set Up OpenAI API Key

Please reach out to admins to receive your OpenAI API key
"""

# Import necessary libraries
import openai
from getpass import getpass

# Securely input your OpenAI API key
api_key = getpass("Enter your OpenAI API Key: ")
client = openai.OpenAI(api_key=api_key)

"""## Step 3: Writting the prompt for the image"""

# Input field for the prompt
image_description = input("Describe the image you'd like to generate here: ")

"""## Step 4: Processing the Inputs with OpenAI"""

response = client.images.generate(
  model="dall-e-3",
  prompt=image_description,
  size="1024x1024",
  quality="standard",
  n=1,
)

image_url = response.data[0].url

image_url

from IPython.display import Image, display

# Create an Image instance with the URL
image = Image(url=image_url)

# Display the image
display(image)

"""## Step 5: Building a streamlit web application

If you're new to Streamlit, please make sure you have attended the live workshop or completed the [Interactive Practice Notebook](https://colab.research.google.com/drive/1avYMd3HVBmCJjCEuOaIC4_z4zXg00CtH?usp=sharing) before starting.
"""

# Step 1: Setting Up Streamlit
# First, ensure Streamlit is installed in your environment. If not, you can install it using pip:
# pip install streamlit

# Step 2: Designing the UI Layout
# Use Streamlit functions to create the UI components for your application.

# Title for your app
# st.title('Merch AI Designer: Revolutionizing Merchandise Creation')

# Step 3: Use Streamlit's sidebar for user input to keep the main area for displaying results and images.

# Step 4: User Inputs - Create input areas for users to submit their merchandise description and select merchandise type.
# description_input = Prompt goes here
# merch_type = T-Shirt, Mug, Poster, Tote Bag, ..

# Step 5: Submit Button
# submit_button = st.sidebar.button('Generate Design')

# Step 6: Processing User Inputs
# if submit_button:
    # Call the DALL-E API processing function
    # generated_image = generate_merch_design(description_input, merch_type)

    # Display the generated image
    # st.image(generated_image, caption=f'Your Custom {merch_type}')

# Step 7: Running Your Streamlit App
# Save this script as a .py file, e.g., merch_ai_designer.py
# Run your Streamlit app using the command: streamlit run merch_ai_designer.py
# Streamlit will start a local server, and you can interact with your app in a web browser.

"""## Step 6 (Optional): Enhance your web app and add more features"""

# Step 8: Iterating on the Design
# Experiment with different UI layouts, add more user input options, or integrate new features to enhance your app.
# Create a function that would allow the user to iterate on the generated image and edit it in one smooth process

"""## Step 7: Share your app in the Lonely Octopus and with the world on LinkedIn!!

<img src="https://i.pinimg.com/736x/f0/4a/08/f04a08853d407a93e6a06f1ce10c8173--poetry-inspiration-top-hats.jpg">
"""